CHIP Mult{
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    Mux16(a[0..14] = false, a[15] = b[15] ,b = a, sel = b[0], out = res1);
    BitShiftL(in = a, out = shift1);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift1, sel = b[1], out = res2);
    BitShiftL(in = shift1, out = shift2);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift2, sel = b[2], out = res3);
    BitShiftL(in = shift2, out = shift3);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift3, sel = b[3], out = res4);
    BitShiftL(in = shift3, out = shift4);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift4, sel = b[4], out = res5);
    BitShiftL(in = shift4, out = shift5);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift5, sel = b[5], out = res6);
    BitShiftL(in = shift5, out = shift6);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift6, sel = b[6], out = res7);
    BitShiftL(in = shift6, out = shift7);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift7, sel = b[7], out = res8);
    BitShiftL(in = shift7, out = shift8);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift8, sel = b[8], out = res9);
    BitShiftL(in = shift8, out = shift9);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift9, sel = b[9], out = res10);
    BitShiftL(in = shift9, out = shift10);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift10, sel = b[10], out = res11);
    BitShiftL(in = shift10, out = shift11);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift11, sel = b[11], out = res12);
    BitShiftL(in = shift11, out = shift12);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift12, sel = b[12], out = res13);
    BitShiftL(in = shift12, out = shift13);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift13, sel = b[13], out = res14);
    BitShiftL(in = shift13, out = shift14);
    Mux16(a[0..14] = false, a[15] = b[15] ,b = shift14, sel = b[14], out = res15);

    Add16(a = res1, b = res2, out = add1);
    Add16(a = add1, b = res3, out = add2);
    Add16(a = add2, b = res4, out = add3);
    Add16(a = add3, b = res5, out = add4);
    Add16(a = add4, b = res6, out = add5);
    Add16(a = add5, b = res7, out = add6);
    Add16(a = add6, b = res8, out = add7);
    Add16(a = add7, b = res9, out = add8);
    Add16(a = add8, b = res10, out = add9);
    Add16(a = add9, b = res11, out = add10);
    Add16(a = add10, b = res12, out = add11);
    Add16(a = add11, b = res13, out = add12);
    Add16(a = add12, b = res14, out = add13);
    Add16(a = add13, b = res15, out = out);
}